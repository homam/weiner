// Generated by CoffeeScript 1.6.2
(function() {
  $(function() {
    var $skill, fancySVG, skills;

    skills = [['.NET', 'AJAX', 'MVC', 'C#', 'CSS', 'Casual Games', 'Distributed Syststems', 'Architecture', 'Scrum', 'SOA', 'SQL', 'Git', 'JavaScript', 'HTML5'], ['Cloud Computing', 'Simulations', 'Haskell', 'Canvas', 'SVG', 'Objective-C'], ['ActionScript', 'Flash', 'Mathematica', 'Python', 'Ruby', 'Visualization']];
    skills = _(skills.map(function(s, i) {
      return s.map(function(a) {
        return {
          name: a,
          size: i
        };
      });
    })).flatten();
    skills = skills.sort(function(a, b) {
      if (a.name > b.name) {
        return 1;
      } else {
        return -1;
      }
    });
    $skill = d3.select('.skills .list').selectAll('li').data(skills).enter().append('li').text(function(s) {
      return s.name + ' ';
    }).attr('class', function(s) {
      return ['a', 'b', 'c'][s.size];
    });
    return fancySVG = function() {
      var $svg, closePath, height, normal, square, width, xScale, yScale, _i, _results;

      xScale = function(p) {
        return p[0] * 4 + 4;
      };
      yScale = function(p) {
        return p[1] * +4;
      };
      closePath = false;
      window.data = (function() {
        _results = [];
        for (_i = 0; _i <= 299; _i++){ _results.push(_i); }
        return _results;
      }).apply(this).map(function(i) {
        return [0, 0];
      });
      window.line = d3.svg.line().x(xScale).y(yScale);
      square = function() {
        closePath = false;
        yScale = function(p) {
          return p[1] * 2 + 4;
        };
        window.line = window.line.y(yScale);
        return window.data = data.map(function(p, i) {
          var quarter;

          quarter = data.length / 3;
          p = (function() {
            switch (false) {
              case !(i <= quarter - 1):
                return [0, i + 1];
              case !(i <= 2 * quarter):
                return [i - quarter, quarter];
              default:
                return [quarter, 3 * quarter - i];
            }
          })();
          return p;
        });
      };
      normal = function() {
        var mu, sigma;

        closePath = false;
        yScale = function(p) {
          return p[1] * 20000 + 4;
        };
        window.line = window.line.y(yScale);
        mu = (data.length - 1) / 2;
        sigma = Math.random() * (mu * .5 - mu * .1) + mu * .1;
        console.log(mu, sigma);
        return window.data = data.map(function(p, i) {
          return [i / 3, (1 / (sigma * 2 * 3.14)) * Math.exp(-0.5 * Math.pow((i - mu) / sigma, 2))];
        });
      };
      square();
      setInterval(function() {
        if (Math.random() > .1) {
          normal();
        } else {
          square();
        }
        return draw();
      }, 2000);
      height = $('body').outerHeight();
      width = $('body').outerWidth();
      $svg = d3.select('body').append('svg').attr('width', width).attr('height', height);
      $('svg').prependTo(document.body);
      window.draw = function() {
        var $path;

        $path = $svg.selectAll('path').data([data]);
        $path.enter().append('path');
        return $path.transition().duration(2000).attr('d', function(d) {
          return line(d) + (closePath ? 'Z' : '');
        });
      };
      draw();
      return setInterval(function() {
        var data;

        data = data.map(function(p) {
          p[0] += (Math.random() > .5 ? 1 : -1) * Math.random() * 50;
          p[1] += (Math.random() > .5 ? 1 : -1) * Math.random() * 50;
          return p;
        });
        return draw();
      }, 2000000);
    };
  });

}).call(this);
